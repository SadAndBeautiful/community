<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sadness.community.dao.MessageMapper">

    <sql id="selectFields">
        id, from_id, to_id, conversation_id ,content, status, create_time
    </sql>

    <sql id="insertFields">
        from_id, to_id, conversation_id ,content, status, create_time
    </sql>




    <!--int insertMessage(Message message);-->
    <insert id="insertMessage" keyProperty="id">
        insert into message(<include refid="insertFields"></include>)
        values(#{fromId}, #{toId}, #{conversationId}, #{content}, #{status}, #{createTime})
    </insert>

    <!--int updateStatus(List<Integer> ids, int status);-->
    <update id="updateStatus">
        update message set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
     </update>

    <!--List<MessageMapper> selectConversationsByUserId(int userId, int offset, int limit);-->
    <select id="selectConversationsByUserId" resultType="Message">
        select <include refid="selectFields"></include>
        from message
        where id in (
            select max(id) from message
            where status != 2
            and from_id != 1
            and (from_id = #{userId} or to_id = #{userId})
            group by conversation_id
        )
        order by id desc
        limit #{offset}, #{limit}
    </select>

    <!--int selectConversationCountByUserId(int userId);-->
    <select id="selectConversationCountByUserId" resultType="java.lang.Integer">
        select count(m.maxid)
        from (
            select max(id) as maxid from message
            where status != 2
            and from_id != 1
            and (from_id = #{userId} or to_id = #{userId})
            group by conversation_id
        ) as m
    </select>

    <!--List<Message> selectLettersByConversation(String conversationId, int offset, int limit);-->
    <select id="selectLettersByConversation" resultType="com.sadness.community.entity.Message">
        select <include refid="selectFields"></include>
        from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
        order by id desc
        limit #{offset}, #{limit}
    </select>

    <!--int selectLettersCountByConversation(String conversationId);-->
    <select id="selectLettersCountByConversation" resultType="java.lang.Integer">
        select count(id)
        from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
    </select>

    <!--int selectLetterUnreadCount(int userId, String conversationId);-->
    <select id="selectLetterUnreadCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where to_id = #{userId}
        and from_id != 1
        and status = 0
        <if test="conversationId!=null">
            and conversation_id = #{conversationId}
        </if>
    </select>

    <!--Message selectLastNotice(int userId, String topic);-->
    <select id="selectLastNotice" resultType="com.sadness.community.entity.Message">
        select <include refid="selectFields"></include>
        from message
        where id in (
            select max(id)
            from message
            where status != 2
            and from_id = 1
            and to_id = #{userId}
            and conversation_id = #{topic}
        )
    </select>

    <!--int selectNoticeCount(int userId, String topic);-->
    <select id="selectNoticeCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where status != 2
        and from_id = 1
        and to_id = #{userId}
        and conversation_id = #{topic}
    </select>

    <select id="selectNoticeUnread" resultType="java.lang.Integer">
        select count(id)
        from message
        where status = 0
        and from_id = 1
        and to_id = #{userId}
        <if test="topic != null">
            and conversation_id = #{topic}
        </if>
    </select>

    <!--List<Message> selectNoticesList(int userId, String topic, int offset, int limit);-->

    <select id="selectNoticesList" resultType="com.sadness.community.entity.Message">
        select <include refid="selectFields"></include>
        from message
        where status != 2
        and from_id = 1
        and to_id = #{userId}
        and conversation_id = #{topic}
        order by id desc
        limit #{offset}, #{limit}
    </select>

</mapper>